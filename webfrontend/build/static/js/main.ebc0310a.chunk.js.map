{"version":3,"sources":["constants/testConstants.js","constants/chartConstants.js","constants/userConstants.js","store.js","reducers/testReducers.js","reducers/chartReducers.js","reducers/userReducers.js","components/List.js","components/Loader.js","components/Message.js","screens/DashboardScreen.js","actions/testActions.js","actions/chartActions.js","components/Tests.js","components/SpreadSheet.js","components/SearchBox.js","components/Paginate.js","screens/TestsScreen.js","screens/TestDetailsScreen.js","components/FormContainer.js","actions/userActions.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","components/Header.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["TEST_LIST_REQUEST","TEST_LIST_SUCCESS","TEST_LIST_FAIL","TEST_DETAILS_REQUEST","TEST_DETAILS_SUCCESS","TEST_DETAILS_FAIL","COUNT_REQUEST","COUNT_SUCCESS","COUNT_FAIL","CHARTS_REQUEST","CHARTS_SUCCESS","CHARTS_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_RESET","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","reducer","combineReducers","testList","state","tests","action","type","loading","payload","page","pages","error","testDetails","test","countList","count","chartValues","charts","userLogin","userInfo","userRegister","successRegister","userDetails","user","userUpdateProfile","success","userList","users","userDelete","userUpdate","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","List","title","ptest","ntest","Card","bg","text","Body","Title","className","Loader","Spinner","animation","role","style","height","width","margin","display","Message","variant","children","Alert","DashboardScreen","history","dispatch","useDispatch","useSelector","useEffect","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","push","Container","fluid","paddingLeft","sm","Tabs","defaultActiveKey","id","Tab","eventKey","labels","datasets","label","values","backgroundColor","options","maintainAspectRatio","Row","lg","Col","oTests","opTests","onTests","sTests","spTests","snTests","lTests","lpTests","lnTests","hTests","hpTests","hnTests","Tests","Table","striped","bordered","hover","responsive","scope","map","to","_id","fontWeight","name","age","sex","location","oncho","schisto","lf","helminths","ExcelFile","ReactExport","ExcelSheet","SpreadSheet","Dataset","columns","font","sz","bold","wpx","value","filename","element","Button","dataSet","SearchBox","useState","keyword","setKeyword","useHistory","Form","onSubmit","e","preventDefault","pathname","Control","onChange","target","Paginate","isAdmin","split","Pagination","Array","keys","x","Item","active","TestsScreen","search","console","log","listTests","TestDetailsScreen","match","params","textAlign","textDecoration","color","FormContainer","xs","md","getUserDetails","LoginScreen","email","setEmail","password","setPassword","post","username","setItem","stringify","login","Group","controlId","Label","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","put","updateUserProfile","UserListScreen","successDelete","deleteHandler","window","confirm","delete","deleteUser","onClick","EditUserScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","Number","updateUser","Check","checked","Header","Navbar","expand","collapseOnSelect","Brand","Toggle","Collapse","Nav","Link","NavDropdown","removeItem","Footer","document","App","path","exact","component","UserEditScreen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ebc0310a.chunk.js","sourcesContent":["export const TEST_LIST_REQUEST = \"TEST_LIST_REQUEST\";\r\nexport const TEST_LIST_SUCCESS = \"TEST_LIST_SUCCESS\";\r\nexport const TEST_LIST_FAIL = \"TEST_LIST_FAIL\";\r\n\r\nexport const TEST_DETAILS_REQUEST = \"TEST_DETAILS_REQUEST\";\r\nexport const TEST_DETAILS_SUCCESS = \"TEST_DETAILS_SUCCESS\";\r\nexport const TEST_DETAILS_FAIL = \"TEST_DETAILS_FAIL\";\r\n\r\nexport const COUNT_REQUEST = \"COUNT_REQUEST\";\r\nexport const COUNT_SUCCESS = \"COUNT_SUCCESS\";\r\nexport const COUNT_FAIL = \"COUNT_FAIL\";\r\n","export const CHARTS_REQUEST = \"CHARTS_REQUEST\";\r\nexport const CHARTS_SUCCESS = \"CHARTS_SUCCESS\";\r\nexport const CHARTS_FAIL = \"CHARTS_FAIL\";\r\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL \";\r\n\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL \";\r\nexport const USER_REGISTER_RESET = \"USER_REGISTER_RESET \";\r\n\r\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\r\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\r\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\";\r\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\";\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\";\r\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\";\r\nexport const USER_UPDATE_PROFILE_FAIL = \"USER_UPDATE_PROFILE_FAIL\";\r\nexport const USER_UPDATE_PROFILE_RESET = \"USER_UPDATE_PROFILE_RESET\";\r\n\r\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\";\r\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\";\r\nexport const USER_LIST_FAIL = \"USER_LIST_FAIL\";\r\nexport const USER_LIST_RESET = \"USER_LIST_RESET\";\r\n\r\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST\";\r\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\";\r\nexport const USER_DELETE_FAIL = \"USER_DELETE_FAIL\";\r\n\r\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\r\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\r\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\r\nexport const USER_UPDATE_RESET = \"USER_UPDATE_RESET\";\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  testListReducer,\r\n  testDetailsReducer,\r\n  countReducer,\r\n} from \"./reducers/testReducers\";\r\nimport { chartsReducer } from \"./reducers/chartReducers\";\r\nimport {\r\n  userLoginReducer,\r\n  userDetailsReducer,\r\n  userRegisterReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from \"./reducers/userReducers\";\r\nconst reducer = combineReducers({\r\n  testList: testListReducer,\r\n  testDetails: testDetailsReducer,\r\n  countList: countReducer,\r\n  chartValues: chartsReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n});\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst initialState = {\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  TEST_LIST_REQUEST,\r\n  TEST_LIST_SUCCESS,\r\n  TEST_LIST_FAIL,\r\n  TEST_DETAILS_REQUEST,\r\n  TEST_DETAILS_SUCCESS,\r\n  TEST_DETAILS_FAIL,\r\n  COUNT_REQUEST,\r\n  COUNT_SUCCESS,\r\n  COUNT_FAIL,\r\n} from \"../constants/testConstants\";\r\n\r\nexport const testListReducer = (state = { tests: [] }, action) => {\r\n  switch (action.type) {\r\n    case TEST_LIST_REQUEST:\r\n      return { loading: true, tests: [] };\r\n\r\n    case TEST_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        tests: action.payload.tests,\r\n        page: action.payload.page,\r\n        pages: action.payload.pages,\r\n      };\r\n\r\n    case TEST_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const testDetailsReducer = (state = { test: {} }, action) => {\r\n  switch (action.type) {\r\n    case TEST_DETAILS_REQUEST:\r\n      return { loading: true, ...state };\r\n\r\n    case TEST_DETAILS_SUCCESS:\r\n      return { loading: false, test: action.payload };\r\n\r\n    case TEST_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const countReducer = (state = { count: [] }, action) => {\r\n  switch (action.type) {\r\n    case COUNT_REQUEST:\r\n      return { loading: true, count: [] };\r\n\r\n    case COUNT_SUCCESS:\r\n      return { loading: false, count: action.payload };\r\n\r\n    case COUNT_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CHARTS_REQUEST,\r\n  CHARTS_SUCCESS,\r\n  CHARTS_FAIL,\r\n} from \"../constants/chartConstants\";\r\n\r\nexport const chartsReducer = (state = { charts: {} }, action) => {\r\n  switch (action.type) {\r\n    case CHARTS_REQUEST:\r\n      return { loading: true, charts: {} };\r\n\r\n    case CHARTS_SUCCESS:\r\n      return { loading: false, charts: action.payload };\r\n\r\n    case CHARTS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_RESET,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_RESET,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_RESET,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_RESET,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, successRegister: true };\r\n\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_REGISTER_RESET:\r\n      return { successRegister: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload };\r\n\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload };\r\n\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_UPDATE_PROFILE_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload };\r\n\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_LIST_RESET:\r\n      return { users: [] };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_UPDATE_RESET:\r\n      return { user: {} };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nconst List = ({ title, tests, ptest, ntest }) => {\r\n  return (\r\n    <Card\r\n      bg=\"var(--main-color)\"\r\n      text=\"dark\"\r\n      // style={{ width: \"18rem\" }}\r\n      // classNameName=\"mb-2\"\r\n    >\r\n      {/* <Card.Header>Header</Card.Header> */}\r\n      <Card.Body>\r\n        <Card.Title> {title} </Card.Title>\r\n        <ul className=\"list-group\">\r\n          <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n            Number of Tests\r\n            <span className=\"badge bg-primary rounded-pill\">{tests}</span>\r\n          </li>\r\n          <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n            Positive Results\r\n            <span className=\"badge bg-primary rounded-pill\">{ptest}</span>\r\n          </li>\r\n          <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n            Negative Results\r\n            <span className=\"badge bg-primary rounded-pill\">{ntest}</span>\r\n          </li>\r\n        </ul>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation=\"border\"\r\n      role=\"status\"\r\n      style={{\r\n        height: \"100px\",\r\n        width: \"100px\",\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n      }}\r\n    >\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </Spinner>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\nfunction Message({ variant, children }) {\r\n  return (\r\n    <div>\r\n      <Alert variant={variant}>{children}</Alert>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col, Tab, Tabs } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { countAction } from \"../actions/testActions\";\r\nimport { chartsAction } from \"../actions/chartActions\";\r\n\r\n// import \"../assets/css/index.css\";\r\n// import OnchoChart from \"../components/charts/OnchoChart\";\r\n// import SchistoChart from \"../components/charts/SchistoChart\";\r\n// import LfChart from \"../components/charts/LfChart\";\r\n// import HelminthsChart from \"../components/charts/HelminthsChart\";\r\nimport \"../components/badge/badge.css\";\r\n\r\nimport List from \"../components/List\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { Chart as ChartJS } from \"chart.js/auto\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nconst DashboardScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const countList = useSelector((state) => state.countList);\r\n  const { error, loading, count } = countList;\r\n\r\n  const chartValues = useSelector((state) => state.chartValues);\r\n  const { charts } = chartValues;\r\n\r\n  // const [labelV, setLabelV] = useState([]);\r\n  // const [valueV, setValueV] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      dispatch(countAction());\r\n      dispatch(chartsAction());\r\n      // setLabelV(charts.labels);\r\n      // setValueV(charts.values);\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, history, userInfo]);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Container fluid style={{ paddingLeft: \"0px !important\" }}>\r\n          <div sm={1}>\r\n            {/* {labelV == null && valueV == null ? (\r\n              <Loader />\r\n            ) : ( */}\r\n            <Tabs\r\n              defaultActiveKey=\"oncho\"\r\n              id=\"uncontrolled-tab-example\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Tab eventKey=\"oncho\" title=\"Onchocerciasis\">\r\n                {/* <OnchoChart labels={labelV} values={valueV} /> */}\r\n                <div>\r\n                  <Bar\r\n                    data={{\r\n                      labels: charts.labels,\r\n                      datasets: [\r\n                        {\r\n                          label: \"Soil transmitted Helminths\",\r\n\r\n                          data: charts.values,\r\n                          // backgroundColor:['red']\r\n                          backgroundColor: \"#333366\",\r\n                        },\r\n                      ],\r\n                    }}\r\n                    type=\"bar\"\r\n                    width={600}\r\n                    height={400}\r\n                    options={{\r\n                      maintainAspectRatio: false,\r\n                    }}\r\n                  />\r\n                </div>\r\n              </Tab>\r\n              <Tab eventKey=\"schisto\" title=\"Schistosomiasis\">\r\n                {/* <SchistoChart labels={labelV} values={valueV} /> */}\r\n                <div>\r\n                  <Bar\r\n                    data={{\r\n                      labels: charts.labels,\r\n                      datasets: [\r\n                        {\r\n                          label: \"Soil transmitted Helminths\",\r\n\r\n                          data: charts.values,\r\n                          // backgroundColor:['red']\r\n                          backgroundColor: \"#333366\",\r\n                        },\r\n                      ],\r\n                    }}\r\n                    type=\"bar\"\r\n                    width={600}\r\n                    height={400}\r\n                    options={{\r\n                      maintainAspectRatio: false,\r\n                    }}\r\n                  />\r\n                </div>\r\n              </Tab>\r\n              <Tab eventKey=\"lf\" title=\"Lymphatic Filariasis\">\r\n                <div>\r\n                  {/* <LfChart labels={labelV} values={valueV} /> */}\r\n                  <Bar\r\n                    data={{\r\n                      labels: charts.labels,\r\n                      datasets: [\r\n                        {\r\n                          label: \"Soil transmitted Helminths\",\r\n\r\n                          data: charts.values,\r\n                          // backgroundColor:['red']\r\n                          backgroundColor: \"#333366\",\r\n                        },\r\n                      ],\r\n                    }}\r\n                    type=\"bar\"\r\n                    width={600}\r\n                    height={400}\r\n                    options={{\r\n                      maintainAspectRatio: false,\r\n                    }}\r\n                  />\r\n                </div>\r\n              </Tab>\r\n              <Tab eventKey=\"helminths\" title=\"S.T. Hemlinths\">\r\n                {/* <HelminthsChart labels={labelV} values={valueV} /> */}\r\n                <div>\r\n                  <Bar\r\n                    data={{\r\n                      labels: charts.labels,\r\n                      datasets: [\r\n                        {\r\n                          label: \"Soil transmitted Helminths\",\r\n\r\n                          data: charts.values,\r\n                          // backgroundColor:['red']\r\n                          backgroundColor: \"#333366\",\r\n                        },\r\n                      ],\r\n                    }}\r\n                    type=\"bar\"\r\n                    width={600}\r\n                    height={400}\r\n                    options={{\r\n                      maintainAspectRatio: false,\r\n                    }}\r\n                  />\r\n                </div>\r\n              </Tab>\r\n            </Tabs>\r\n            {/* )} */}\r\n          </div>\r\n\r\n          <div>\r\n            <Row sm={1} lg={4}>\r\n              <Col>\r\n                <List\r\n                  title=\" onchocerciasis\"\r\n                  tests={count.oTests}\r\n                  ptest={count.opTests}\r\n                  ntest={count.onTests}\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <List\r\n                  title=\"schistosomiasis\"\r\n                  tests={count.sTests}\r\n                  ptest={count.spTests}\r\n                  ntest={count.snTests}\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <List\r\n                  title=\" l. filariasis\"\r\n                  tests={count.lTests}\r\n                  ptest={count.lpTests}\r\n                  ntest={count.lnTests}\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <List\r\n                  title=\"S. T. Helminths\"\r\n                  tests={count.hTests}\r\n                  ptest={count.hpTests}\r\n                  ntest={count.hnTests}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </Container>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardScreen;\r\n","import axios from \"axios\";\r\nimport {\r\n  TEST_LIST_REQUEST,\r\n  TEST_LIST_SUCCESS,\r\n  TEST_LIST_FAIL,\r\n  TEST_DETAILS_REQUEST,\r\n  TEST_DETAILS_SUCCESS,\r\n  TEST_DETAILS_FAIL,\r\n  COUNT_REQUEST,\r\n  COUNT_SUCCESS,\r\n  COUNT_FAIL,\r\n} from \"../constants/testConstants\";\r\n\r\nexport const listTests =\r\n  (keyword = \"\") =>\r\n  async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: TEST_LIST_REQUEST });\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n      const config = {\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get(`/api/tests${keyword}`, config);\r\n      dispatch({\r\n        type: TEST_LIST_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: TEST_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const listTestDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: TEST_DETAILS_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/tests/${id}`, config);\r\n    dispatch({\r\n      type: TEST_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TEST_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const countAction = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: COUNT_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(\"/api/count/\", config);\r\n    dispatch({\r\n      type: COUNT_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: COUNT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport {\r\n  CHARTS_REQUEST,\r\n  CHARTS_SUCCESS,\r\n  CHARTS_FAIL,\r\n} from \"../constants/chartConstants\";\r\n\r\nexport const chartsAction = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: CHARTS_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(\"/api/charts/\", config);\r\n    dispatch({\r\n      type: CHARTS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CHARTS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nconst Tests = ({ tests, loading }) => {\r\n  if (loading) {\r\n    <h2>Loading...</h2>;\r\n  }\r\n  return (\r\n    <Table\r\n      striped\r\n      bordered\r\n      hover\r\n      responsive\r\n      className=\"table-sm\"\r\n      id=\"excel-export\"\r\n    >\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">ID</th>\r\n          <th scope=\"col\">NAME</th>\r\n          <th scope=\"col\">age</th>\r\n          <th scope=\"col\">Gender</th>\r\n          <th scope=\"col\">Location</th>\r\n          <th scope=\"col\">Onchocerciasis</th>\r\n          <th scope=\"col\">Schistosomiasis</th>\r\n          <th scope=\"col\">lf</th>\r\n          <th scope=\"col\">s.T. Helminths</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {tests.map((test) => (\r\n          <LinkContainer to={`/test/${test._id}`} key={test._id}>\r\n            <tr key={test._id}>\r\n              <td style={{ fontWeight: \"bold\" }}> {test._id}</td>\r\n              <td style={{ fontWeight: \"bold\" }}> {test.name}</td>\r\n              <td style={{ fontWeight: \"bold\" }}> {test.age}</td>\r\n              <td style={{ fontWeight: \"bold\" }}> {test.sex}</td>\r\n              <td style={{ fontWeight: \"bold\" }}> {test.location}</td>\r\n              <td style={{ fontWeight: \"bold\" }}>\r\n                {test.oncho === 1 ? \"Positive\" : \"Negative\"}\r\n              </td>\r\n              <td style={{ fontWeight: \"bold\" }}>\r\n                {test.schisto === 1 ? \"Positive\" : \"Negative\"}\r\n              </td>\r\n              <td style={{ fontWeight: \"bold\" }}>\r\n                {test.lf === 1 ? \"Positive\" : \"Negative\"}\r\n              </td>\r\n              <td style={{ fontWeight: \"bold\" }}>\r\n                {test.helminths === 1 ? \"Positive\" : \"Negative\"}\r\n              </td>\r\n            </tr>\r\n          </LinkContainer>\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default Tests;\r\n","import React from \"react\";\r\nimport ReactExport from \"react-data-export\";\r\nimport { Button } from \"react-bootstrap\";\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelSheet;\r\n\r\nconst SpreadSheet = ({ tests }) => {\r\n  const Dataset = [\r\n    {\r\n      columns: [\r\n        {\r\n          title: \" Id\",\r\n          style: { font: { sz: \"16\", bold: true } },\r\n          width: { wpx: 125 },\r\n        },\r\n        {\r\n          title: \" Name\",\r\n          style: { font: { sz: \"16\", bold: true } },\r\n          width: { wpx: 125 },\r\n        },\r\n        {\r\n          title: \" Age\",\r\n          style: { font: { sz: \"16\", bold: true } },\r\n          width: { wpx: 125 },\r\n        },\r\n        {\r\n          title: \" Gender\",\r\n          style: { font: { sz: \"16\", bold: true } },\r\n          width: { wpx: 125 },\r\n        },\r\n        {\r\n          title: \"Location\",\r\n          style: { font: { sz: \"16\", bold: true } },\r\n          width: { wpx: 125 },\r\n        },\r\n        {\r\n          title: \" Onchocerciasis\",\r\n          style: { font: { sz: \"16\", bold: true } },\r\n          width: { wpx: 125 },\r\n        },\r\n        {\r\n          title: \" Schistosomiasis\",\r\n          style: { font: { sz: \"16\", bold: true } },\r\n          width: { wpx: 125 },\r\n        },\r\n        {\r\n          title: \"L.F.\",\r\n          style: { font: { sz: \"16\", bold: true } },\r\n          width: { wpx: 125 },\r\n        },\r\n        {\r\n          title: \"  S.T. Helminths\",\r\n          style: { font: { sz: \"16\", bold: true } },\r\n          width: { wpx: 125 },\r\n        },\r\n      ],\r\n      data: tests.map((test) => [\r\n        { value: test._id, style: { font: { sz: \"14\" } } },\r\n        { value: test.name, style: { font: { sz: \"14\" } } },\r\n        { value: test.age, style: { font: { sz: \"14\" } } },\r\n        { value: test.sex, style: { font: { sz: \"14\" } } },\r\n        { value: test.location, style: { font: { sz: \"14\" } } },\r\n        {\r\n          value: test.oncho === 1 ? \"Positive\" : \"Negative\",\r\n          style: { font: { sz: \"14\" } },\r\n        },\r\n        {\r\n          value: test.schisto === 1 ? \"Positive\" : \"Negative\",\r\n          style: { font: { sz: \"14\" } },\r\n        },\r\n        {\r\n          value: test.lf === 1 ? \"Positive\" : \"Negative\",\r\n          style: { font: { sz: \"14\" } },\r\n        },\r\n        {\r\n          value: test.helminths === 1 ? \"Positive\" : \"Negative\",\r\n          style: { font: { sz: \"14\" } },\r\n        },\r\n      ]),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <ExcelFile\r\n      filename=\"Watertest\"\r\n      element={\r\n        <Button className=\"btn btn-block btn-primary\"> Export to Excel</Button>\r\n      }\r\n    >\r\n      <ExcelSheet dataSet={Dataset} name=\"WaterTest\" />\r\n    </ExcelFile>\r\n  );\r\n};\r\n\r\nexport default SpreadSheet;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction SearchBox() {\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (keyword) {\r\n      history.push(`/tests/?keyword=${keyword}&page=1`);\r\n    } else {\r\n      history.push(history.push(history.location.pathname));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={submitHandler} className=\"d-flex\">\r\n      <Form.Control\r\n        type=\"text\"\r\n        name=\"q\"\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n        className=\"mr-sm-2 ml-sm-5\"\r\n      ></Form.Control>\r\n      <Button type=\"submit\" variant=\"outline-info\" className=\"p-2\">\r\n        <i className=\"fa fa-search\"></i>\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nfunction Paginate({ pages, page, keyword = \"\", isAdmin = false }) {\r\n  if (keyword) {\r\n    keyword = keyword.split(\"?keyword=\")[1].split(\"&\")[0];\r\n  }\r\n\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={`/tests/?keyword=${keyword}&page=${x + 1}`}\r\n          >\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  );\r\n}\r\n// to={\r\n//   !isAdmin\r\n//     ? `/tests/?keyword=${keyword}&page=${x + 1}`\r\n//     : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n// }\r\nexport default Paginate;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { listTests } from \"../actions/testActions\";\r\n\r\nimport Tests from \"../components/Tests\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport SpreadSheet from \"../components/SpreadSheet\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Paginate from \"../components/Paginate\";\r\n// import \"../assets/css/index.css\";\r\n\r\nconst TestsScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const testList = useSelector((state) => state.testList);\r\n  const { error, loading, tests, page, pages } = testList;\r\n\r\n  let keyword = history.location.search;\r\n  console.log(keyword);\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      dispatch(listTests(keyword));\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, history, userInfo, keyword]);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <div>\r\n          <SearchBox />\r\n          <Tests tests={tests} loading={loading} />\r\n          <Paginate page={page} pages={pages} keyword={keyword} />\r\n          <SpreadSheet tests={tests} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestsScreen;\r\n\r\n// const tests = [];\r\n\r\n// function search(items) {\r\n//   return items.filter((item) => {\r\n//     return searchParam.some((newItem) => {\r\n//       return (\r\n//         item[newItem].toString().toLowerCase().indexOf(q.toLowerCase()) > -1\r\n//       );\r\n//     });\r\n//   });\r\n// }\r\n// function handlePageChange(page) {\r\n//   SetCurrentPage(page);\r\n// }\r\n\r\n//const handlePageClick = (data) => {};\r\n// const testPaginate = paginate(tests, currentPage, pageSize);\r\n\r\n// Get current posts\r\n// const indexOfLastTest = currentPage * pageSize;\r\n// const indexOfFirstTest = indexOfLastTest - pageSize;\r\n// const currentTests = search(tests).slice(indexOfFirstTest, indexOfLastTest);\r\n\r\n//{\r\n/* <Form inline>\r\n        <Form.Control\r\n          placeholder=\"Search for...\"\r\n          type=\"text\"\r\n          name=\"q\"\r\n          onChange={(e) => setQ(e.target.value)}\r\n          value={q}\r\n          className=\"mr-sm-2 ml-sm-5\"\r\n        ></Form.Control>\r\n      </Form> */\r\n//}\r\n\r\n// const [q, setQ] = useState(\"\");\r\n\r\n// const [searchParam] = useState([\"id\", \"name\"]);\r\n// const [pageSize, setPageSize] = useState(10);\r\n// const [currentPage, SetCurrentPage] = useState(1);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col, Modal } from \"react-bootstrap\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { listTestDetails } from \"../actions/testActions\";\r\nimport \"../assets/css/index.css\";\r\nconst TestDetailsScreen = ({ match }) => {\r\n  const dispatch = useDispatch();\r\n  const testDetails = useSelector((state) => state.testDetails);\r\n  const { loading, error, test } = testDetails;\r\n  useEffect(() => {\r\n    dispatch(listTestDetails(match.params.id));\r\n  }, [dispatch, match]);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error} </Message>\r\n      ) : (\r\n        <div>\r\n          <Row>\r\n            <h3 style={{ textAlign: \"center\", textDecoration: \"underline\" }}>\r\n              Personal Information\r\n            </h3>\r\n          </Row>\r\n          <div className=\"details-text\">\r\n            <Row>\r\n              <Col className=\"table-text\">NAME</Col>\r\n              <Col className=\"table-text\"> {test.name}</Col>\r\n            </Row>\r\n            <Row>\r\n              <Col className=\"table-text\">AGE</Col>\r\n              <Col className=\"table-text\"> {test.age}</Col>\r\n            </Row>\r\n            <Row>\r\n              <Col className=\"table-text\">GENDER</Col>\r\n              <Col className=\"table-text\"> {test.sex}</Col>\r\n            </Row>\r\n            <Row>\r\n              <Col className=\"table-text\">LOCATION</Col>\r\n              <Col className=\"table-text\"> {test.location}</Col>\r\n            </Row>\r\n          </div>\r\n          <h3 style={{ textAlign: \"center\", textDecoration: \"underline\" }}>\r\n            Tests\r\n          </h3>\r\n          <div>\r\n            <Row>\r\n              <Col className=\"table-text\">ONCHOCERCIASIS</Col>\r\n              <Col className=\"table-text\">\r\n                {test.oncho === 1 ? \"Positive\" : \"Negative\"}\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col className=\"table-text\">SCHISTOSOMIASIS</Col>\r\n              <Col className=\"table-text\">\r\n                {test.schisto === 1 ? \"Positive\" : \"Negative\"}{\" \"}\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col className=\"table-text\">LYMPHATIC FILARIASIS</Col>\r\n              <Col className=\"table-text\">\r\n                {test.lf === 1 ? \"Positive\" : \"Negative\"}\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col className=\"table-text\">SOIL TRANSMITTED HELMINTHS</Col>\r\n              <Col className=\"table-text\">\r\n                {test.helminths === 1 ? \"Positive\" : \"Negative\"}\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <Link\r\n        to=\"/tests\"\r\n        className=\"btn btn-block bg-primary  \"\r\n        style={{\r\n          color: \" var(--txt-white) \",\r\n        }}\r\n      >\r\n        Back\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestDetailsScreen;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nfunction FormContainer({ children }) {\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default FormContainer;\r\n","import axios from \"axios\";\r\nimport {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_RESET,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_RESET,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_RESET,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      \"/api/users/login/\",\r\n      { username: email, password: password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT });\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n  dispatch({ type: USER_LIST_RESET });\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      \"/api/users/register/\",\r\n      { name: name, email: email, password: password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      // payload: data,\r\n    });\r\n\r\n    // dispatch({\r\n    //   type: USER_LOGIN_SUCCESS,\r\n    //   payload: data,\r\n    // });\r\n\r\n    //  localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/api/users/${id}/`, config);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.put(\r\n      `/api/users/profile/update/`,\r\n      user,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listUsers = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(\r\n      `/api/users/`,\r\n\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.delete(\r\n      `/api/users/delete/${id}`,\r\n\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_DELETE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.put(\r\n      `/api/users/update/${user._id}/`,\r\n      user,\r\n\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_SUCCESS,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { login } from \"../actions/userActions\";\r\n\r\nfunction LoginScreen({ location, history }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  // const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { error, loading, userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history, userInfo]);\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\" className=\"btn btn-block\">\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      {/* <Row classname=\"py-3\">\r\n        <Col>\r\n          New ?{\" \"}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : \"/register\"}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row> */}\r\n    </FormContainer>\r\n  );\r\n}\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { register } from \"../actions/userActions\";\r\nimport { USER_REGISTER_RESET } from \"../constants/userConstants\";\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { error, loading, successRegister } = userRegister;\r\n\r\n  useEffect(() => {\r\n    if (successRegister) {\r\n      dispatch({ type: USER_REGISTER_RESET });\r\n      history.push(\"/admin/userlist\");\r\n    }\r\n  }, [history, successRegister]);\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password != confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Register</h1>\r\n      {message && <Message variant=\"danger\">{message}</Message>}\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      {loading && <Loader />}\r\n\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type=\"name\"\r\n            placeholder=\"Enter Name\"\r\n            value={name}\r\n            required\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            required\r\n            placeholder=\"Enter Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter Password\"\r\n            required\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"passwordConfirm\">\r\n          <Form.Label> Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            required\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Register\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n}\r\n\r\nexport default RegisterScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\r\nfunction ProfileScreen({ history }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { error, loading, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    } else {\r\n      if (!user || !user.name || success || userInfo._id !== user._id) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n        dispatch(getUserDetails(\"profile\"));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, user, history, userInfo, success]);\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(\r\n        updateUserProfile({\r\n          id: user._id,\r\n          name: name,\r\n          email: email,\r\n          password: password,\r\n        })\r\n      );\r\n\r\n      setMessage(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <Row>\r\n      <Col md={3} lg={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant=\"danger\">{message}</Message>}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {loading && <Loader />}\r\n\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter Name\"\r\n              value={name}\r\n              required\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              required\r\n              placeholder=\"Enter Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"passwordConfirm\">\r\n            <Form.Label> Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9} lg={9}>\r\n        <h2>My Tests</h2>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default ProfileScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { listUsers, deleteUser } from \"../actions/userActions\";\r\n\r\nfunction UserListScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, error, users } = userList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers());\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, history, successDelete, userInfo]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete this user?\")) {\r\n      dispatch(deleteUser(id));\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <h1>USERS</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td style={{ fontWeight: \"bold\" }}>{user._id}</td>\r\n                <td style={{ fontWeight: \"bold\" }}>{user.name}</td>\r\n                <td style={{ fontWeight: \"bold\" }}>{user.email}</td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i\r\n                      className=\"fas fa-check-circle\"\r\n                      style={{ color: \"green\" }}\r\n                    ></i>\r\n                  ) : (\r\n                    <i\r\n                      className=\"fas fa-times-circle\"\r\n                      style={{ color: \"red\" }}\r\n                    ></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      <i className=\"fas fa-edit\"></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    className=\"btn-sm\"\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className=\"fas fa-trash\"></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserListScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\r\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\r\nimport { userDeleteReducer } from \"../reducers/userReducers\";\r\n\r\nfunction EditUserScreen({ match, history }) {\r\n  const userId = match.params.id;\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { error, loading, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    error: errorUpdate,\r\n    loading: loadingUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      history.push(\"/admin/userlist\");\r\n    } else {\r\n      if (!user.name || user._id !== Number(userId)) {\r\n        dispatch(getUserDetails(userId));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setIsAdmin(user.isAdmin);\r\n      }\r\n    }\r\n  }, [user, userId, successUpdate, history]);\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUser({ _id: user._id, name, email, isAdmin }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/admin/userlist\">Go Back</Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"isAdmin\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label=\"Is Admin\"\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"primary\"\r\n              className=\"btn  btn- primary btn-block\"\r\n            >\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditUserScreen;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { logout } from \"../actions/userActions\";\r\n\r\nimport SearchBox from \"./SearchBox\";\r\nfunction Header() {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const dispatch = useDispatch();\r\n  const logoutHandler = ({ history }) => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand>Testcms</Navbar.Brand>\r\n          </LinkContainer>\r\n\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            {/* {userInfo && <SearchBox />} */}\r\n\r\n            <Nav className=\"d-flex justify-content-end\">\r\n              {userInfo && (\r\n                <LinkContainer to=\"/tests\">\r\n                  <Nav.Link>\r\n                    <i className=\"fa fa-flask\"></i>Tests\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id=\"username\">\r\n                  <LinkContainer to=\"/profile\">\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/\">\r\n                    <NavDropdown.Item onClick={logoutHandler}>\r\n                      Logout\r\n                    </NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to=\"/\">\r\n                  <Nav.Link>\r\n                    <i className=\"fa fa-user\"></i>Login\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title=\"Admin\" id=\"adminmenu\">\r\n                  <LinkContainer to=\"/admin/userlist\">\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/register\">\r\n                    <NavDropdown.Item>Register</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n\r\n              {/* <LinkContainer to=\"/login\">\r\n                <Nav.Link>\r\n                  <i className=\"fas fa-user\"></i>LogIn\r\n                </Nav.Link>\r\n              </LinkContainer> */}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"text-center py-3\"> Copyright &copy; CSIR-Water</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport \"./assets/boxicons-2.0.7/css/boxicons.min.css\";\n// import \"./assets/css/grid.css\";\n// import \"./assets/css/index.css\";\n// import \"./App.css\";\n// import Sidebar from \"./components/sidebar/Sidebar\";\n// import Routes from \"./components/Routes\";\nimport { Container } from \"react-bootstrap\";\nimport DashboardScreen from \"./screens/DashboardScreen\";\nimport TestsScreen from \"./screens/TestsScreen\";\nimport TestDetailsScreen from \"./screens/TestDetailsScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport UserListScreen from \"./screens/UserListScreen\";\nimport UserEditScreen from \"./screens/UserEditScreen\";\nimport Header from \"./components/Header.js\";\nimport Footer from \"./components/Footer.js\";\ndocument.title = \"Water Test\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path=\"/\" exact component={DashboardScreen} />\n          <Route path=\"/login\" component={LoginScreen} />\n          <Route path=\"/register\" component={RegisterScreen} />\n          <Route path=\"/profile\" component={ProfileScreen} />\n          <Route path=\"/tests\" component={TestsScreen} />\n          <Route path=\"/test/:id\" component={TestDetailsScreen} />\n          <Route path=\"/admin/userlist\" component={UserListScreen} />\n          <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n\n// blue:#333366     red:#cc0066\n\n// <BrowserRouter>\n//       <Route\n//         render={(props) => (\n//           <div className=\"layout\">\n//             <Sidebar {...props} />\n//             <div className=\"layout__content\">\n//               <Header />\n//               <div className=\"layout__content-main\">\n//                 <Container style={{ paddingTop: \"20px\" }}>\n//                   <Routes />\n//                 </Container>\n//               </div>\n//               <Footer />\n//             </div>\n//           </div>\n//         )}\n//       />\n//     </BrowserRouter>\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport \"./index.css\";\nimport \"./bootstrap.min.css\";\n\nimport App from \"./App\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}